@import './theme';

/******************************************************************************
 === TRANSITION ===
******************************************************************************/
@mixin transition( $property, $duration, $timing, $delay: 0s ) {
  -webkit-transition: $property $duration $timing $delay;
  -moz-transition: $property $duration $timing $delay;
  -o-transition: $property $duration $timing $delay;
  -ms-transition: $property $duration $timing $delay;
  transition: $property $duration $timing $delay;
}

@mixin transition-dalay( $delay ) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  -ms-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin noneTransition() {
  -webkit-transition: none;
  -moz-transition: none;
  -o-transition: none;
  -ms-transition: none;
  transition: none;
}

/******************************************************************************
 === ANIMATION ===
******************************************************************************/
@mixin animation( $property, $duration, $timing, $delay: 0s ) {
  -webkit-animation: $property $duration $timing $delay;
  -moz-animation: $property $duration $timing $delay;
  -o-animation: $property $duration $timing $delay;
  -ms-animation: $property $duration $timing $delay;
  animation: $property $duration $timing $delay;
}

@mixin noneAnimation() {
  -webkit-animation: none;
  -moz-animation: none;
  -o-animation: none;
  -ms-animation: none;
  animation: none;
}

@mixin animation-forwards() {
  -moz-animation-fill-mode: forwards;
  -o-animation-fill-mode: forwards;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;   
}

@mixin animation-repeat( $count: infinite) {
  -moz-animation-iteration-count: $count;
  -o-animation-iteration-count: $count;
  -webkit-animation-iteration-count: $count;
  animation-iteration-count: $count;   
}

/******************************************************************************
 === OTHER ===
******************************************************************************/

@mixin opacity( $property ) {
  opacity: $property;
  filter: alpha(opacity= ($property*100));
}

@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
}

@mixin ariaVisible() {
  position: absolute;
  left: 0;
  top: 0;
  opacity: .1;
  filter: alpha(opacity=1);
  color: transparent;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

@mixin normalVisible() {
  position: relative;
  left: auto;
  top: auto;
  opacity: 1;
  filter: alpha(opacity=100);
  color: inherit;
  width: auto;
  height: auto;
  overflow: visible;
}

/******************************************************************************
 === link ===
******************************************************************************/
@mixin asLink(){
  text-decoration: underline;
  color: $color-link;
  position: relative;

  &.-no-underline {
    text-decoration: none;
  }
  
  &:active {
    top: 2px;
  }

  &:focus {
    box-shadow: 0 0 5px $color-focus;
  }

  &.-disabled {
    color: $color-font;
    cursor: default;
    @include opacity(.5);
  }

  &.-arrow-left,
  &.-arrow-right {
    text-decoration: none;
    white-space: nowrap;
  }

  &.-arrow-right {
    &:after{
      content: ' \2192';
    }
  }

  &.-arrow-left {
    &:before{
      content: '\2190 ';
    }
  }
}

/******************************************************************************
 === button active ===
******************************************************************************/
@mixin buttonActive(){
  position: relative;
  &:active {
    top: 2px;
  }  
}
/******************************************************************************
 === Responsvie table breaking ===
******************************************************************************/
@mixin responsiveTableBreaking(){
  border: 0 none;
  thead {
    display: none;
  }

  &, tbody, tr, td {
    display: block;
    width: 100%;
  }

  tr {
    border: 1px solid $color-border;
    margin: 0 0 20px 0;
    border-radius: $border-round;
  }

  td {
    padding: 10px;
    width: 100%;
    &:before {
      content: attr(data-label) ': ';
      display: inline-block;
      float: left;
      padding-right: 10px;
      width: 100px;
      @include opacity(.8);
      @include ellipsis();
    }
  }
}

/******************************************************************************
 === shwdoe ===
******************************************************************************/
@mixin boxShadow( $opacityAlfa:.1, $opacityBeta:.12 ){
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, $opacityAlfa), 0 1px 2px 0 rgba(0, 0, 0, $opacityBeta);
}

@mixin boxLevelShadow(){
  box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.1), 0 5px 6px 0 rgba(0, 0, 0, 0.1);
}

@mixin boxPopupShadow(){
  box-shadow: 0 12px 24px 0 rgba(0, 0, 0, 0.1), 0 15px 12px 0 rgba(0, 0, 0, 0.1);
}


/*****************************************************************************/
@mixin focusShadow(){
  border-color: $color-focus;
  box-shadow: 0 0 0 2px $color-focus;
}

@mixin errorShadow(){
  border-color: $color-error;
  box-shadow: inset 0 0 2px $color-error;
}


/*****************************************************************************/
@mixin label-setting() {
  content: attr(data-label);
  padding-right: 5px;
  font-weight: normal;
  font-style: italic;
  @include opacity(.7);
}